# {{{ COPYING 
#
#  This file contains compile rules to build glMLite, an OCaml binding
#  to the OpenGL API.
#
#  Copyright (C) 2006 - 2011  Florent Monnier
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation the
#  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#  sell copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  The Software is provided "as is", without warranty of any kind, express or
#  implied, including but not limited to the warranties of merchantability,
#  fitness for a particular purpose and noninfringement. In no event shall
#  the authors or copyright holders be liable for any claim, damages or other
#  liability, whether in an action of contract, tort or otherwise, arising
#  from, out of or in connection with the software or the use or other dealings
#  in the Software.
#
# }}}

include ../Makefile.depend

.PHONY: va varray varray_byte varray_opt
varray_byte: vertArray.cma
varray_opt: vertArray.cmxa
va varray: varray_byte varray_opt


vertArray.ml: vertArray.ml.pp  $(ENUMS_DIR)/interleaved_format.inc.ml $(MLPP)
	$(MLPP) -C $<  > $@

vertArray.mli: vertArray.ml
	cp $< $@
	$(OCAML) struct_to_sig.ml $@   # 's/= struct/: sig/g'

vertArray.cmi: vertArray.mli GL.cmi
	$(OCAMLC) -c $<

vertArray.cmx: vertArray.ml vertArray.cmi
	$(OCAMLOPT) -c $(ML_STATIC)  $<

vertArray.cmo: vertArray.ml vertArray.cmi
	$(OCAMLC) -c $(ML_STATIC)  $<

varray.wrap.o: varray.wrap.c  $(ENUMS_DIR)/interleaved_format.inc.c
	$(OCAMLC)  -c  $<


ifeq ($(USE_GL3_CORE_PROFILE),OK)
gl3_deprecations.o: gl3_deprecations.c gl3_deprecations.h
	$(OCAMLC)  -c  $<

dllvertArray.so libvertArray.a: varray.wrap.o gl3_deprecations.o
	$(OCAMLMKLIB)  -o  vertArray  $^ $(GL_LIBS) -L"$(OCAML_PATH)"
else
dllvertArray.so libvertArray.a: varray.wrap.o
	$(OCAMLMKLIB)  -o  vertArray  $< $(GL_LIBS) -L"$(OCAML_PATH)"
endif


vertArray.cmxa vertArray.a:  vertArray.cmx  dllvertArray.so
	$(OCAMLMKLIB)  -o  vertArray  $< $(GL_LIBS) -L"$(OCAML_PATH)"

vertArray.cma:  vertArray.cmo  dllvertArray.so
	$(OCAMLMKLIB)  -o  vertArray  $< $(GL_LIBS) -L"$(OCAML_PATH)"


# vim: fdm=marker
