# {{{ COPYING 
#
#  This file contains compile rules to build glMLite, an OCaml binding
#  to the OpenGL API.
#
#  Copyright (C) 2006 - 2011  Florent Monnier
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation the
#  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#  sell copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  The Software is provided "as is", without warranty of any kind, express or
#  implied, including but not limited to the warranties of merchantability,
#  fitness for a particular purpose and noninfringement. In no event shall
#  the authors or copyright holders be liable for any claim, damages or other
#  liability, whether in an action of contract, tort or otherwise, arising
#  from, out of or in connection with the software or the use or other dealings
#  in the Software.
#
# }}}

include ../Makefile.depend

#### configure, test the config

CONF_TOOL=configure.exe

# ocaml knows which cc to use, so rely on it
configure.o: configure.c
	$(OCAMLC) -c $<
configure_boot.cmx: configure_boot.ml
	$(OCAMLOPT) -c $<
$(CONF_TOOL): configure.o configure_boot.cmx
	$(OCAMLOPT) -cclib "$(GL_LIBS)" configure.o configure_boot.cmx -o $@

clean-conf:
	rm -f configure.exe

CONF_GL_VERSION = $(shell ./$(CONF_TOOL) --gl-version)


#### generating xmlm
XMLM_PATH=.

xmlm.cmi: xmlm.mli
	$(OCAMLC) -c -g -o xmlm.cmi xmlm.mli
xmlm.cmo: xmlm.ml xmlm.cmi
	$(OCAMLC) -c -g -o xmlm.cmo xmlm.ml
xmlm.cma: xmlm.cmo xmlm.cmi
	$(OCAMLC) -a -g -o xmlm.cma xmlm.cmo
xmlm.cmx: xmlm.ml xmlm.cmi
	$(OCAMLOPT) -c -g -o xmlm.cmx xmlm.ml
xmlm.cmxa: xmlm.cmx xmlm.cmi
	$(OCAMLOPT) -a -g -o xmlm.cmxa xmlm.cmx

#### generating the gl-enums

ENUMS_TOOL=enums.exe
ENUMS_DIR=enums

$(ENUMS_DIR):
	if [ ! -d $@ ]; then mkdir $@ ; fi

$(ENUMS_TOOL): enums_xmlm.ml $(ENUMS_DIR) xmlm.cmxa
	$(OCAMLOPT) \
	      -I $(XMLM_PATH) xmlm.cmxa  \
	      $<  -o $@


$(ENUMS_DIR)/%.inc.ml:  enums.list.xml  $(ENUMS_TOOL)  $(CONF_TOOL)
	./$(ENUMS_TOOL) $(CONF_GL_VERSION) $< -ml  `basename $@ .inc.ml`  >  $@

$(ENUMS_DIR)/%.inc.c:  enums.list.xml  $(ENUMS_TOOL)  $(CONF_TOOL)
	./$(ENUMS_TOOL) $(CONF_GL_VERSION) $< -c  `basename $@ .inc.c`  >  $@

$(ENUMS_DIR)/%.inc-r.c:  enums.list.xml  $(ENUMS_TOOL)  $(CONF_TOOL)
	./$(ENUMS_TOOL) $(CONF_GL_VERSION) $< -cr  `basename $@ .inc-r.c`  >  $@

clean-enum-incs:
	rm -f  $(ENUMS_TOOL)  $(ENUMS_DIR)/*.inc{,-r}.{c,ml}
	if [ -d $(ENUMS_DIR) ] ; then rmdir  $(ENUMS_DIR)/ ; fi

clean-enum-dist:
	rm -f  $(ENUMS_TOOL)

clean_enum: clean-enum-incs clean-enum-dist
.PHONY: clean_enum clean-enum-incs clean-enum-dist

