# {{{ COPYING 
#
#  This file contains compile rules to build glMLite, an OCaml binding
#  to the OpenGL API.
#
#  Copyright (C) 2006 - 2011  Florent Monnier
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation the
#  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#  sell copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  The Software is provided "as is", without warranty of any kind, express or
#  implied, including but not limited to the warranties of merchantability,
#  fitness for a particular purpose and noninfringement. In no event shall
#  the authors or copyright holders be liable for any claim, damages or other
#  liability, whether in an action of contract, tort or otherwise, arising
#  from, out of or in connection with the software or the use or other dealings
#  in the Software.
#
# }}}

PNG_CFLAGS := $(shell libpng-config --cflags)
PNG_LIBS   := $(shell libpng-config --ldflags)

.PHONY: png png_byte png_opt
png all: png_byte png_opt
png_byte: png_loader.cma
png_opt: png_loader.cmxa

include ../Makefile.depend

GL.cmi:
	$(MAKE) $@ -f Makefile

ENUMS_DIR=enums
include ./Makefile.enums

png_loader.cmi png_loader.cmo: png_loader.ml  GL.cmi
	$(OCAMLC) -c $<

png_loader.cmx png_loader.o: png_loader.ml
	$(OCAMLOPT) -c $<

loader-libpng.o: loader-libpng.c  loader-texure.h  $(ENUMS_DIR)/pixel_data_format.inc-r.c
	$(OCAMLC)  -c -ccopt "$(PNG_CFLAGS)" $<

dllpng_loader.so libpng_loader.a: loader-libpng.o
	$(OCAMLMKLIB) -o png_loader $< -L"$(OCAML_PATH)" $(PNG_LIBS) $(GL_LIBS)

png_loader.cmxa png_loader.a:  png_loader.cmx  dllpng_loader.so
	$(OCAMLMKLIB) -o png_loader $< -L"$(OCAML_PATH)" $(PNG_LIBS) $(GL_LIBS)

png_loader.cma:  png_loader.cmo  dllpng_loader.so
	$(OCAMLMKLIB) -o png_loader $< -L"$(OCAML_PATH)" $(PNG_LIBS) $(GL_LIBS)

DIST_FILES_PNG=\
    png_loader.cma   \
    png_loader.cmi   \
    png_loader.cmxa  \
    png_loader.cmx   \
    png_loader.a     \
    png_loader.o     \
    libpng_loader.a  \
#EOL
SO_DIST_FILES_PNG=\
    dllpng_loader.so \
#EOL

install: $(DIST_FILES_PNG)  $(SO_DIST_FILES_PNG)
	if [ ! -d $(PREFIX) ]; then install -d $(PREFIX) ; fi

	for file in $(SO_DIST_FILES_PNG); do if [ -f $$file ];then install -m 0755 $$file $(SO_PREFIX)/; fi; done
	for file in $(DIST_FILES_PNG);    do if [ -f $$file ];then install -m 0644 $$file $(PREFIX)/; fi; done


# vim: fdm=marker
