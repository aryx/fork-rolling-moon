# {{{ COPYING 
#
#  This file contains compile rules to build glMLite, an OCaml binding
#  to the OpenGL API.
#
#  Copyright (C) 2006 - 2011  Florent Monnier
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation the
#  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#  sell copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  The Software is provided "as is", without warranty of any kind, express or
#  implied, including but not limited to the warranties of merchantability,
#  fitness for a particular purpose and noninfringement. In no event shall
#  the authors or copyright holders be liable for any claim, damages or other
#  liability, whether in an action of contract, tort or otherwise, arising
#  from, out of or in connection with the software or the use or other dealings
#  in the Software.
#
# }}}

include ../Makefile.depend
# {{{ Enums 

ENUMS_DIR=enums

# enums are pre-generated in the directory enums/
# to re-generate them uncomment this line (if commented):
include ./Makefile.enums

# }}}
include ./Makefile.mlpp

.PHONY: vbo vbo_byte vbo_opt vbo_clean
vbo: vbo_byte vbo_opt
vbo_byte: VBO.cma
vbo_opt: VBO.cmxa


ML_VBO_INCS=\
    $(ENUMS_DIR)/buffer_object_target.inc.ml   $(ENUMS_DIR)/vbo_usage_pattern.inc.ml

C_VBO_INCS=\
    $(ENUMS_DIR)/vbo_usage_pattern_arb.inc.c     $(ENUMS_DIR)/buffer_object_target_arb.inc.c \
    $(ENUMS_DIR)/vbo_usage_pattern_arb.inc-r.c


VBO.ml: VBO.ml.pp $(ML_VBO_INCS) $(MLPP)
	$(MLPP) -C $<  > $@

VBO.mli: VBO.ml.pp $(ML_VBO_INCS) $(MLPP)
	$(MLPP) -D MLI -C $<  > $@
	$(OCAML) struct_to_sig.ml $@   # 's/= struct/: sig/g'

VBO.cmi: VBO.mli GL.cmi
	$(OCAMLC) -c $<

VBO.cmx: VBO.ml VBO.cmi
	$(OCAMLOPT) -c $(ML_STATIC)  $<

VBO.cmo: VBO.ml VBO.cmi
	$(OCAMLC) -c $(ML_STATIC)  $<

vbo.wrap.o: vbo.wrap.c  $(C_VBO_INCS)
	$(OCAMLC)  -c  $<


ifeq ($(USE_GL3_CORE_PROFILE),OK)
gl3_deprecations.o: gl3_deprecations.c gl3_deprecations.h
	$(OCAMLC)  -c  $<

dllVBO.so libVBO.a: vbo.wrap.o gl3_deprecations.o
	$(OCAMLMKLIB)  -o  VBO  $^ -L"$(OCAML_PATH)" $(GL_LIBS)
else
dllVBO.so libVBO.a: vbo.wrap.o
	$(OCAMLMKLIB)  -o  VBO  $< -L"$(OCAML_PATH)" $(GL_LIBS)
endif


VBO.cmxa VBO.a:  VBO.cmx  dllVBO.so
	$(OCAMLMKLIB)  -o  VBO  $< -L"$(OCAML_PATH)" $(GL_LIBS)

VBO.cma:  VBO.cmo  dllVBO.so
	$(OCAMLMKLIB)  -o  VBO  $< -L"$(OCAML_PATH)" $(GL_LIBS)

vbo_clean:
	rm -f VBO.{ml,mli} VBO.cm[ioxa] VBO.{o,a,cmxa} dllVBO.so vbo.wrap.o

DIST_FILES_VBO=\
    VBO.cma   \
    VBO.cmi   \
    VBO.cmxa  \
    VBO.cmx   \
    VBO.a     \
    VBO.o     \
    libVBO.a  \
#EOL
SO_DIST_FILES_VBO=\
    dllVBO.so \
#EOL

install: $(DIST_FILES_VBO)  $(SO_DIST_FILES_VBO)
	if [ ! -d $(PREFIX) ]; then install -d $(PREFIX) ; fi

	for file in $(SO_DIST_FILES_VBO); do if [ -f $$file ];then install -m 0755 $$file $(SO_PREFIX)/; fi; done
	for file in $(DIST_FILES_VBO);    do if [ -f $$file ];then install -m 0644 $$file $(PREFIX)/; fi; done

# vim: fdm=marker
